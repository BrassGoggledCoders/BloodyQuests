buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'com.wynprice.cursemaven:CurseMaven:1.2.2'
    }
}

repositories {
    maven {
        name "BrassGoggledCoders maven"
        url "https://maven.brassgoggledcoders.xyz"
    }
    maven {
        name "TehNut Maven"
        url "http://tehnut.info/maven"
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.wynprice.cursemaven'

version = "${minecraft_version}-${mod_version}." + System.getenv("bamboo_buildNumber")

group= "xyz.brassgoggledcoders.bloodyquests"
archivesBaseName = "${mod_name}"

minecraft {
    version = "${forge_version}"

    mappings = "${mappings_version}"
    runDir = "run/"
    useDepAts = true

    replace "@VERSION@", project.version
    replaceIn "${mod_name}.java"
}

dependencies {
	deobfCompile "com.wayoftime.bloodmagic:BloodMagic:${bm_version}"
    deobfCompile "info.amerifrance.guideapi:Guide-API:${guideapi_version}"
    deobfCompile curse.resolve("better-questing", 2760161)
    deobfCompile curse.resolve("better-questing-standard-expansion", 2760167)
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

processResources
{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    classifier = ""
}

task deobfJar(type: Jar) {
    from(sourceSets.main.output) {
        classifier = "deobf"
    }
}

artifacts {
    archives deobfJar
}

idea {
    module {
        inheritOutputDirs = true
    }
}

task("uploadJars", dependsOn: "reobf") {
    description = "uploads JARs"
    if (System.getenv("bamboo_local_maven") != null) {
        apply plugin: 'maven'
        uploadArchives {
            repositories {
                mavenDeployer {
                    repository(url: "file://" + System.getenv("bamboo_local_maven"))
                    pom {
                        groupId = project.group
                        version = project.version
                        artifactId = project.archivesBaseName
                        project {
                            name project.archivesBaseName
                            packaging 'jar'
                            description 'ModularUtilities'
                            url ''
                            scm {
                                url 'https://github.com/BrassGoggledCoders/${mod_name}'
                                connection 'scm:git:git@github.com:BrassGoggledCoders/${mod_name}.git'
                                developerConnection 'scm:git:git@github.com:BrassGoggledCoders/${mod_name}.git'
                            }
                            issueManagement {
                                system 'github'
                                url 'https://github.com/BrassGoggledCoders/${mod_name}/issues'
                            }
                            licenses {
                                license {
                                    name 'MIT'
                                    url 'https://github.com/BrassGoggledCoders/ModularUtilities/blob/master/LICENSE'
                                    distribution 'repo'
                                }
                            }
                            developers {
				developer {
                                    id 'warlordjones'
                                    name 'warlordjones'
                                    roles { role 'developer' }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
